redis:
  networkPolicy:
  # we turn network policies off by default as the network policy included does not adhere to the minimum
  # requirements of Rubix-auth, in that every egress statement must inclued at least one To: block.
    enabled: false
  master:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: com.palantir.rubix/instance-group
                operator: In
                values:
                - fedstart
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: master
                  app.kubernetes.io/instance: "{{ $.Release.Name }}"
              topologyKey: topology.kubernetes.io/zone
            weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - master
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - "{{ $.Release.Name }}"
            topologyKey: kubernetes.io/hostname
  replica:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: com.palantir.rubix/instance-group
                operator: In
                values:
                - fedstart
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: replica
                  app.kubernetes.io/instance: "{{ $.Release.Name }}"
              topologyKey: topology.kubernetes.io/zone
            weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - replica
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - "{{ $.Release.Name }}"
            topologyKey: kubernetes.io/hostname
